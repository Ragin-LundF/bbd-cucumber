plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.liquibase.gradle' version '2.0.4'
    id "com.jfrog.bintray" version "1.8.5"
    id "org.sonarqube" version "3.0"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

jar {
    enabled = true
}

bootJar {
    enabled = false
}

// exclude tests, because they are only examples
test {
    exclude '**'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:2.3.1.RELEASE"
    }
}

dependencies {
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.glassfish:javax.json:1.1.4'
    implementation 'net.javacrumbs.json-unit:json-unit:2.18.1'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv'

    implementation 'commons-io:commons-io:2.7'
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'org.apache.httpcomponents:httpclient'

    implementation 'io.cucumber:cucumber-java:6.2.2'
    implementation 'io.cucumber:cucumber-spring:6.2.2'
    implementation 'io.cucumber:cucumber-junit:6.2.2'

    implementation 'javax.validation:validation-api:2.0.1.Final'

    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation 'junit:junit:4.13'
}

def pomConfig = {
    licenses {
        license {
            name "MIT"
            url "https://opensource.org/licenses/MIT"
            distribution "repo"
        }
    }
    developers {
        developer {
            name "ragin"
        }
    }

    scm {
        url "https://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib"
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifactId "bdd-cucumber-gherkin-lib"
            version "${version}"
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Cucumber library for simpler e2e tests with predefined sentences for API and basic database access')
                root.appendNode('name', 'bdd-cucumber-gherkin-lib')
                root.appendNode('url', 'https://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib')
                root.children().last() + pomConfig
            }
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Ragin-LundF/bbd-cucumber-gherkin-lib")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['maven']
    dryRun = false //[Default: false] Whether to run this as dry-run, without deploying
    publish = true //[Default: false] Whether version should be auto published after an upload
    override = true //[Default: false] Whether to override version artifacts already published
    filesSpec {
        from 'build/libs'
        into 'standalone_files/level1'
    }
    pkg {
        repo = 'bdd-cucumber-gherkin-lib'
        name = 'bdd-cucumber-gherkin-lib'
        userOrg = user
        licenses = ['MIT']
        vcsUrl = 'https://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib.git'
        labels = ['cucumber', 'bdd', 'gherkin']
        publicDownloadNumbers = true
        version {
            name = "${version}"
            desc = 'Cucumber library for simpler e2e tests with predefined sentences for REST API and basic database access'
            vcsTag = "v${version}"
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}
